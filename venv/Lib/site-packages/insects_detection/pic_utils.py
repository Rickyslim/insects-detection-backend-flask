import numpy as np
import cv2 as cv
import os
import matplotlib.pyplot as plt
class pic_tools():
    @staticmethod
    def rename_imgs(gallery_path,green_house_tag,img_type):
        for root, dirs, files in os.walk(gallery_path):
            for name, index in zip(files, range(len(files))):
                row = int((index) / 8) + 1
                column = (math.floor(index / 2)) % 4 + 1
                side_mediate = (index) % 4 + 1
                side = "A" if side_mediate % 2 != 0 else "B"
                # print(row,column,side)
                filepath = (os.path.join(root, name))
                filename = name.split(".")[0]
                new_filename = green_house_tag + str(row) + "-" + str(column) + "-" + side
                print(new_filename)
                os.renames(filepath, os.path.join(root, new_filename + img_type))
    @staticmethod
    def read_imgs(img_url):
        # 使用imdecode函数进行读取
        img = cv.imdecode(np.fromfile(img_url, dtype=np.uint8), -1)
        return img
    @staticmethod
    def read_imgs_from_dir(dir):
        filepath=[]
        for root, dirs, files in os.walk(dir):
            for name in files:
                filepath.append(os.path.join(root, name))
        return filepath

    @staticmethod
    def cutout_imgs(img):
        #截取出粘虫板亮黄色部分
        lower = np.array([0, 70, 70], dtype="uint8")
        upper = np.array([100, 255, 255], dtype="uint8")
        hsv = cv.cvtColor(img, cv.COLOR_BGR2HSV)
        mask = cv.inRange(hsv, lower, upper)
        image = cv.bitwise_and(img, img, mask=mask)

        gray = cv.cvtColor(image, cv.COLOR_BGR2GRAY)  # 转换为灰度图
        contours, hierarchy = cv.findContours(gray, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)  # 轮廓检测
        height, width = img.shape[:2]
        index = 0
        max = 0
        for c in range(len(contours)):
            x, y, w, h = cv.boundingRect(contours[c])
            if h > height or w > width:
                continue
            area = cv.contourArea(contours[c])
            if area > max:
                max = area
                index = c
        x, y, w, h = cv.boundingRect(contours[index])
        result = np.zeros(img.shape, dtype=np.uint8)
        cv.drawContours(result, contours, index, (0, 0, 255), 2)  # 绘制轮廓
        # cv.namedWindow("contours", 2)
        # cv.imshow("contours", result)
        result1 = np.zeros(img.shape, dtype=np.uint8)
        cv.rectangle(result1, (x, y, w, h), (0, 225, 0), 20)  # 绘制截取的矩形
        # cv.namedWindow("outer_rect", 2)
        # cv.imshow("outer_rect", result1)
        cropped = image[y:y + h - 50, x:x + w - 50]
        # cv.namedWindow("7", 2)
        # cv.imshow("7", cropped)
        # print(cropped.shape)3100,2400
        dst = cv.resize(cropped, (1000, 900), interpolation=cv.INTER_CUBIC)
        # cv.namedWindow("cropped_img", 2)
        # cv.imshow("cropped_img", dst)
        cv.waitKey(0)
        return dst

